{
    "openapi": "3.1.0",
    "info": {
        "title": "Global Trade and Supply Chain - Test Endpoints",
        "description": "REST API for Global Trade and Supply Chain - Test Endpoints.",
        "version": "1.0.0",
        "license": {
            "name": "Apache 2.0 License",
            "url": "https://opensource.org/licenses/Apache-2.0"
        }
    },
    "servers": [
        {
            "url": "https://localhost"
        }
    ],
    "tags": [
        {
            "name": "Identity",
            "description": "Service to provide all features related to digital identity."
        },
        {
            "name": "Identity Profile",
            "description": "Service to provide all features related to digital identity profiles."
        }
    ],
    "paths": {
        "/identity/{id}": {
            "get": {
                "operationId": "identityResolve",
                "summary": "Resolve an identity",
                "tags": [
                    "Identity"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "The identity to get the document for.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "example": "did:iota:tst:0xe3088ba9aa8c28e1d139708a14e8c0fdff11ee8223baac4aa5bcf3321e4bfc6a"
                    }
                ],
                "security": [],
                "responses": {
                    "200": {
                        "description": "Response to resolving an identity.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DidDocument"
                                },
                                "examples": {
                                    "identityResolveResponseExample": {
                                        "value": {
                                            "id": "did:iota:tst:0xe3088ba9aa8c28e1d139708a14e8c0fdff11ee8223baac4aa5bcf3321e4bfc6a",
                                            "service": [
                                                {
                                                    "id": "did:iota:tst:0xe3088ba9aa8c28e1d139708a14e8c0fdff11ee8223baac4aa5bcf3321e4bfc6a#revocation",
                                                    "type": "RevocationBitmap2022",
                                                    "serviceEndpoint": "data:application/octet-stream;base64,eJyzMmAAAwABr"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The server cannot process the request, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The server has encountered a situation it does not know how to handle, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "InternalServerError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/identity/profile": {
            "post": {
                "operationId": "identityProfileCreate",
                "summary": "Create an identity profile",
                "tags": [
                    "Identity Profile"
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The rest request ended in success with no data."
                    },
                    "400": {
                        "description": "The server cannot process the request, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The request resulted in a conflicting operation, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictResponse"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "ConflictError",
                                            "message": "component.error",
                                            "properties": {
                                                "conflicts": [
                                                    "1"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The server has encountered a situation it does not know how to handle, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "InternalServerError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Request to create an identity profile.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IdentityProfileCreateRequest"
                            },
                            "examples": {
                                "identityProfileCreateRequestExample": {
                                    "value": {
                                        "properties": [
                                            {
                                                "key": "role",
                                                "type": "https://schema.org/Text",
                                                "value": "User",
                                                "isPublic": false
                                            },
                                            {
                                                "key": "email",
                                                "type": "https://schema.org/Text",
                                                "value": "john@example.com",
                                                "isPublic": false
                                            },
                                            {
                                                "key": "name",
                                                "type": "https://schema.org/Text",
                                                "value": "John Smith",
                                                "isPublic": true
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "operationId": "identityProfileGet",
                "summary": "Get the identity profile properties",
                "tags": [
                    "Identity Profile"
                ],
                "parameters": [
                    {
                        "name": "propertyNames",
                        "description": "The properties to get for the profile, defaults to all, should be a comma separated list.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "role,email,name"
                    }
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to get an identity details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProfileGetResponse"
                                },
                                "examples": {
                                    "identityGetResponseExample": {
                                        "value": {
                                            "identity": "did:iota:tst:0xc57d94b088f4c6d2cb32ded014813d0c786aa00134c8ee22f84b1e2545602a70",
                                            "properties": [
                                                {
                                                    "key": "role",
                                                    "type": "https://schema.org/Text",
                                                    "value": "User",
                                                    "isPublic": false
                                                },
                                                {
                                                    "key": "email",
                                                    "type": "https://schema.org/Text",
                                                    "value": "john@example.com",
                                                    "isPublic": false
                                                },
                                                {
                                                    "key": "name",
                                                    "type": "https://schema.org/Text",
                                                    "value": "John Smith",
                                                    "isPublic": true
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The server cannot process the request, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you tried to access does not exist, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "NotFoundError",
                                            "message": "component.error",
                                            "properties": {
                                                "notFoundId": "1"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The server has encountered a situation it does not know how to handle, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "InternalServerError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "identityProfileUpdate",
                "summary": "Update an identity profile properties",
                "tags": [
                    "Identity Profile"
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The rest request ended in success with no data."
                    },
                    "400": {
                        "description": "The server cannot process the request, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you tried to access does not exist, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "NotFoundError",
                                            "message": "component.error",
                                            "properties": {
                                                "notFoundId": "1"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The server has encountered a situation it does not know how to handle, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "InternalServerError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "description": "Request to update an identity profile.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IdentityProfileUpdateRequest"
                            },
                            "examples": {
                                "identityProfileUpdateRequestExample": {
                                    "value": {
                                        "properties": [
                                            {
                                                "key": "role",
                                                "type": "https://schema.org/Text",
                                                "value": "User",
                                                "isPublic": false
                                            },
                                            {
                                                "key": "email",
                                                "type": "https://schema.org/Text",
                                                "isPublic": false
                                            },
                                            {
                                                "key": "name",
                                                "type": "https://schema.org/Text",
                                                "value": "John Smith",
                                                "isPublic": true
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "identityProfileRemove",
                "summary": "Remove an identity profile",
                "tags": [
                    "Identity Profile"
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The rest request ended in success with no data."
                    },
                    "400": {
                        "description": "The server cannot process the request, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you tried to access does not exist, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "NotFoundError",
                                            "message": "component.error",
                                            "properties": {
                                                "notFoundId": "1"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The server has encountered a situation it does not know how to handle, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "InternalServerError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/identity/profile/{identity}/public": {
            "get": {
                "operationId": "identityProfileGetPublic",
                "summary": "Get the identity profile public properties",
                "tags": [
                    "Identity Profile"
                ],
                "parameters": [
                    {
                        "name": "identity",
                        "description": "The identity to get the profile for.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "example": "did:iota:tst:0xc57d94b088f4c6d2cb32ded014813d0c786aa00134c8ee22f84b1e2545602a70"
                    },
                    {
                        "name": "propertyNames",
                        "description": "The properties to get for the profile, defaults to all, should be a comma separated list.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "role,email,name"
                    }
                ],
                "security": [],
                "responses": {
                    "200": {
                        "description": "Response to get an identity public profile.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProfileGetPublicResponse"
                                },
                                "examples": {
                                    "identityGetPublicResponseExample": {
                                        "value": {
                                            "properties": [
                                                {
                                                    "key": "role",
                                                    "type": "https://schema.org/Text",
                                                    "value": "User"
                                                },
                                                {
                                                    "key": "email",
                                                    "type": "https://schema.org/Text",
                                                    "value": "john@example.com"
                                                },
                                                {
                                                    "key": "name",
                                                    "type": "https://schema.org/Text",
                                                    "value": "John Smith"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The server cannot process the request, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you tried to access does not exist, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundResponse"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "NotFoundError",
                                            "message": "component.error",
                                            "properties": {
                                                "notFoundId": "1"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The server has encountered a situation it does not know how to handle, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "InternalServerError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/identity/profile/query": {
            "get": {
                "operationId": "identitiesProfileList",
                "summary": "Get the list of profile data for identities",
                "tags": [
                    "Identity Profile"
                ],
                "parameters": [
                    {
                        "name": "filters",
                        "description": "The filters to apply to the list, comma separated list with color between key and value for each pair e.g. prop1:value1,prop2:value2.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "propertyNames",
                        "description": "The properties to get for the profile, defaults to all, should be a comma separated list.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "description": "The cursor for paged requests.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "description": "Number of items to return.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "security": [
                    {
                        "jwtBearerAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to get a list of identities.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityProfileListResponse"
                                },
                                "examples": {
                                    "identitiesProfileListResponseExample": {
                                        "value": {
                                            "items": [
                                                {
                                                    "identity": "did:iota:tst:0xc57d94b088f4c6d2cb32ded014813d0c786aa00134c8ee22f84b1e2545602a70",
                                                    "properties": [
                                                        {
                                                            "key": "email",
                                                            "type": "https://schema.org/Text",
                                                            "value": "john@example.com",
                                                            "isPublic": false
                                                        }
                                                    ]
                                                }
                                            ],
                                            "cursor": "1",
                                            "pageSize": 10,
                                            "totalEntities": 20
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The server cannot process the request, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "GeneralError",
                                            "message": "component.error",
                                            "properties": {
                                                "foo": "bar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to use the API or no credentials were supplied, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "UnauthorizedError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The server has encountered a situation it does not know how to handle, see the error field for more details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "exampleResponse": {
                                        "value": {
                                            "name": "InternalServerError",
                                            "message": "component.error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Error": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name for the error."
                    },
                    "message": {
                        "type": "string",
                        "description": "The message for the error."
                    },
                    "source": {
                        "type": "string",
                        "description": "The source of the error."
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Any additional information for the error."
                    },
                    "stack": {
                        "type": "string",
                        "description": "The stack trace for the error."
                    },
                    "inner": {
                        "$ref": "#/components/schemas/Error"
                    }
                },
                "required": [
                    "name",
                    "message"
                ],
                "additionalProperties": false,
                "description": "Model to describe serialized error."
            },
            "NotFoundResponse": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "notFoundId": {
                        "type": "string",
                        "description": "The id if the item that was not found."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name for the error."
                    },
                    "message": {
                        "type": "string",
                        "description": "The message for the error."
                    },
                    "source": {
                        "type": "string",
                        "description": "The source of the error."
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Any additional information for the error."
                    },
                    "stack": {
                        "type": "string",
                        "description": "The stack trace for the error."
                    },
                    "inner": {
                        "$ref": "#/components/schemas/Error"
                    }
                },
                "required": [
                    "message",
                    "name"
                ],
                "description": "The body which contains the error."
            },
            "ConflictResponse": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "conflicts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The conflicting items."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name for the error."
                    },
                    "message": {
                        "type": "string",
                        "description": "The message for the error."
                    },
                    "source": {
                        "type": "string",
                        "description": "The source of the error."
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Any additional information for the error."
                    },
                    "stack": {
                        "type": "string",
                        "description": "The stack trace for the error."
                    },
                    "inner": {
                        "$ref": "#/components/schemas/Error"
                    }
                },
                "required": [
                    "conflicts",
                    "message",
                    "name"
                ],
                "description": "The body which contains the error."
            },
            "DidDocument": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id for the document."
                    },
                    "alsoKnownAs": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ],
                        "description": "Aliases for the document."
                    },
                    "controller": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ],
                        "description": "The controller for the document."
                    },
                    "verificationMethod": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "$ref": "#/components/schemas/DidDocumentVerificationMethod"
                                }
                            ]
                        },
                        "description": "The verification methods."
                    },
                    "authentication": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "$ref": "#/components/schemas/DidDocumentVerificationMethod"
                                }
                            ]
                        },
                        "description": "The authentication methods."
                    },
                    "assertionMethod": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "$ref": "#/components/schemas/DidDocumentVerificationMethod"
                                }
                            ]
                        },
                        "description": "The assertion methods."
                    },
                    "keyAgreement": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "$ref": "#/components/schemas/DidDocumentVerificationMethod"
                                }
                            ]
                        },
                        "description": "The key agreements."
                    },
                    "capabilityInvocation": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "$ref": "#/components/schemas/DidDocumentVerificationMethod"
                                }
                            ]
                        },
                        "description": "The capability invocations."
                    },
                    "capabilityDelegation": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "$ref": "#/components/schemas/DidDocumentVerificationMethod"
                                }
                            ]
                        },
                        "description": "The capability delegations."
                    },
                    "service": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DidService"
                        },
                        "description": "The services."
                    }
                },
                "required": [
                    "id"
                ],
                "additionalProperties": false,
                "description": "Interface describing a DID Document. Spec https://www.w3.org/TR/did-core/#did-document-properties."
            },
            "DidDocumentVerificationMethod": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the entry."
                    },
                    "controller": {
                        "type": "string",
                        "description": "The controller for the entry."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the entry."
                    },
                    "publicKeyMultibase": {
                        "type": "string",
                        "description": "The public key for the entry. Spec https://datatracker.ietf.org/doc/html/draft-multiformats-multibase-03 ."
                    },
                    "publicKeyJwk": {
                        "$ref": "#/components/schemas/Jwk"
                    },
                    "revocation": {
                        "type": "string",
                        "description": "Multi key partial revocation."
                    }
                },
                "required": [
                    "id",
                    "controller",
                    "type"
                ],
                "additionalProperties": false,
                "description": "Interface describing a DID document verification method."
            },
            "Jwk": {
                "type": "object",
                "properties": {
                    "alg": {
                        "$ref": "#/components/schemas/JwtAlgorithms"
                    },
                    "use": {
                        "type": "string",
                        "description": "The intended use for the key."
                    },
                    "key_ops": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The operation(s) that the key is intended to be used for."
                    },
                    "kty": {
                        "type": "string",
                        "description": "The key type parameter."
                    },
                    "n": {
                        "type": "string",
                        "description": "The public key parameters."
                    },
                    "e": {
                        "type": "string",
                        "description": "Exponent parameter."
                    },
                    "d": {
                        "type": "string",
                        "description": "The private key parameters."
                    },
                    "p": {
                        "type": "string",
                        "description": "The private key parameters."
                    },
                    "q": {
                        "type": "string",
                        "description": "The private key parameters."
                    },
                    "dp": {
                        "type": "string",
                        "description": "The private key parameters."
                    },
                    "dq": {
                        "type": "string",
                        "description": "The private key parameters."
                    },
                    "qi": {
                        "type": "string",
                        "description": "The private key parameters."
                    },
                    "kid": {
                        "type": "string",
                        "description": "The key ID."
                    }
                },
                "required": [
                    "kty"
                ],
                "additionalProperties": {
                    "description": "Additional fields in the key."
                },
                "description": "The fields in a JSON Web Key."
            },
            "JwtAlgorithms": {
                "anyOf": [
                    {
                        "type": "string",
                        "const": "HS256",
                        "description": "HMAC using SHA-256."
                    },
                    {
                        "type": "string",
                        "const": "EdDSA",
                        "description": "EdDSA using Ed25519."
                    }
                ],
                "description": "The cryptographic algorithms supported for JSON Web Tokens and JSON Web Keys."
            },
            "DidService": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the service."
                    },
                    "type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ],
                        "description": "The type of the service."
                    },
                    "serviceEndpoint": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        ],
                        "description": "The endpoint for the service."
                    }
                },
                "required": [
                    "id",
                    "type",
                    "serviceEndpoint"
                ],
                "additionalProperties": false,
                "description": "Interface describing a did document service."
            },
            "IdentityProfileCreateRequest": {
                "type": "object",
                "properties": {
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IdentityProfileProperty"
                        },
                        "description": "Properties for the identity."
                    }
                },
                "required": [
                    "properties"
                ],
                "additionalProperties": false,
                "description": "The data for the request."
            },
            "IdentityProfileProperty": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The key for the item."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type for the item."
                    },
                    "value": {
                        "description": "The value for the item."
                    },
                    "isPublic": {
                        "type": "boolean",
                        "description": "Is the property public."
                    }
                },
                "required": [
                    "isPublic",
                    "key",
                    "type",
                    "value"
                ],
                "additionalProperties": false,
                "description": "Interface describing a contract which provides profile operations."
            },
            "IdentityProfileGetResponse": {
                "type": "object",
                "properties": {
                    "identity": {
                        "type": "string",
                        "description": "The identity of the profile, this is the authenticated user identity."
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IdentityProfileProperty"
                        },
                        "description": "The properties for the identity."
                    }
                },
                "required": [
                    "identity"
                ],
                "additionalProperties": false,
                "description": "The response payload."
            },
            "IdentityProfileGetPublicResponse": {
                "type": "object",
                "properties": {
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Property"
                        },
                        "description": "The properties for the identity."
                    }
                },
                "additionalProperties": false,
                "description": "The response payload."
            },
            "Property": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The key for the item."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type for the item."
                    },
                    "value": {
                        "description": "The value for the item."
                    }
                },
                "required": [
                    "key",
                    "type",
                    "value"
                ],
                "additionalProperties": false,
                "description": "Interface describing a property."
            },
            "IdentityProfileUpdateRequest": {
                "type": "object",
                "properties": {
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IdentityProfileProperty"
                        },
                        "description": "Properties for the identity."
                    }
                },
                "required": [
                    "properties"
                ],
                "additionalProperties": false,
                "description": "The data for the request."
            },
            "IdentityProfileListResponse": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "identity": {
                                    "type": "string",
                                    "description": "The identity."
                                },
                                "properties": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IdentityProfileProperty"
                                    },
                                    "description": "The properties for the identity."
                                }
                            },
                            "required": [
                                "identity"
                            ],
                            "additionalProperties": false
                        },
                        "description": "The identities."
                    },
                    "cursor": {
                        "type": "string",
                        "description": "An optional cursor, when defined can be used to call find to get more entities."
                    },
                    "pageSize": {
                        "type": "number",
                        "description": "Number of entities to return."
                    },
                    "totalEntities": {
                        "type": "number",
                        "description": "Total entities length."
                    }
                },
                "required": [
                    "items",
                    "totalEntities"
                ],
                "additionalProperties": false,
                "description": "The response payload."
            }
        },
        "securitySchemes": {
            "jwtBearerAuthScheme": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}